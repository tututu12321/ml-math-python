import numpy as np
import matplotlib.pyplot as plt

# 1の3乗根を計算
roots_of_unity = [np.exp(2j * np.pi * k / 3) for k in range(3)]

# 実部と虚部を取得
real_parts = [root.real for root in roots_of_unity]
imag_parts = [root.imag for root in roots_of_unity]

# 1の3乗根をベクトルとして複素平面に表示
plt.figure(figsize=(8, 8))
plt.axhline(0, color='black', linewidth=0.5)
plt.axvline(0, color='black', linewidth=0.5)
plt.grid(True, linestyle='--', alpha=0.6)

# 原点 (0, 0) からベクトルを描画
for i, (real, imag) in enumerate(zip(real_parts, imag_parts)):
    plt.quiver(0, 0, real, imag, angles='xy', scale_units='xy', scale=1, color=f"C{i}",
               label=f"Root {i+1}: ({real:.2f}, {imag:.2f})")

# プロットの設定
plt.title("Cube Roots of Unity (Complex Plane with Vectors)")
plt.xlabel("Real Part")
plt.ylabel("Imaginary Part")
plt.axis('equal')
plt.legend()
plt.show()

# 三相交流のシミュレーション
# パラメータ設定
frequency = 50  # Frequency (Hz)
amplitude = 1    # Voltage amplitude
time = np.linspace(0, 0.04, 1000)  # Time axis (1 cycle: 1/50 seconds)

# 各相の電圧を計算
v_a = amplitude * np.sin(2 * np.pi * frequency * time)  # A phase
v_b = amplitude * np.sin(2 * np.pi * frequency * time - 2 * np.pi / 3)  # B phase (-120°)
v_c = amplitude * np.sin(2 * np.pi * frequency * time + 2 * np.pi / 3)  # C phase (+120°)

# 三相交流をプロット
plt.figure(figsize=(10, 6))
plt.plot(time, v_a, label="A Phase", color='red')
plt.plot(time, v_b, label="B Phase", color='green')
plt.plot(time, v_c, label="C Phase", color='blue')

# プロットの設定
plt.title("Three-Phase AC Voltage")
plt.xlabel("Time (s)")
plt.ylabel("Voltage (V)")
plt.legend()
plt.grid()
plt.show()
