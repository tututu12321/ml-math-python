import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import solve_ivp

# パラメータ設定
R = 1.0  # 抵抗 (Ω)
C = 1.0  # コンデンサ (F)
tau = R * C  # 時定数

# 状態方程式の定義
def state_space(t, x, u):
    dxdt = -x / tau + u / tau
    return dxdt

# 入力信号（ステップ入力）
def input_signal(t):
    return 1.0  # 定常状態のステップ入力

# シミュレーションの設定
t_span = (0, 10)  # シミュレーション時間
x0 = [0]  # 初期状態（コンデンサの初期電圧）

# 状態方程式を解く
def solve_lpf(t_span, x0):
    # 定常入力を使用して状態方程式を解く
    result = solve_ivp(lambda t, x: [state_space(t, x, input_signal(t))], t_span, x0, t_eval=np.linspace(0, 10, 500))
    return result

# シミュレーションを実行
result = solve_lpf(t_span, x0)

# 結果のプロット
plt.figure(figsize=(10, 6))
plt.plot(result.t, result.y[0], label="Output (y(t))")
plt.title("Low-pass Filter Response (State-Space Control)")
plt.xlabel("Time [s]")
plt.ylabel("Output [V]")
plt.grid(True)
plt.legend()
plt.show()
