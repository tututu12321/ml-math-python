# 必要なライブラリをインストール
!pip install tensorflow tensorflow-hub tensorflow-object-detection-api
!pip install opencv-python matplotlib

# 必要なライブラリをインポート
import tensorflow as tf
import numpy as np
import cv2
import matplotlib.pyplot as plt
from google.colab import files
from object_detection.utils import visualization_utils as vis_util
from object_detection.utils import label_map_util

# モデルのロード
MODEL_NAME = 'ssd_mobilenet_v2_coco'
MODEL_DIR = tf.keras.utils.get_file(
    'ssd_mobilenet_v2_coco',
    'http://download.tensorflow.org/models/object_detection/ssd_mobilenet_v2_coco_2018_03_29.tar.gz',
    untar=True
)
model_dir = MODEL_DIR + "/saved_model"
detect_fn = tf.saved_model.load(model_dir)

# COCOラベルマップの読み込み（パスに注意）
LABEL_MAP_PATH = "mscoco_label_map.pbtxt"  # COCOラベルマップのパスを指定
category_index = label_map_util.create_category_index_from_labelmap(LABEL_MAP_PATH, use_display_name=True)

# 画像をアップロード
uploaded = files.upload()

# アップロードした画像ファイルを読み込み
image_path = list(uploaded.keys())[0]
image = cv2.imread(image_path)

# 画像の前処理
image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
image_expanded = np.expand_dims(image_rgb, axis=0)

# 物体検出を実行
input_tensor = tf.convert_to_tensor(image_expanded)
detections = detect_fn(input_tensor)

# 検出結果
boxes = detections['detection_boxes'][0].numpy()
classes = detections['detection_classes'][0].numpy().astype(np.int32)
scores = detections['detection_scores'][0].numpy()

# バウンディングボックスの描画
vis_util.visualize_boxes_and_labels_on_image_array(
    image_rgb,
    boxes,
    classes,
    scores,
    category_index,
    instance_masks=None,
    use_normalized_coordinates=True,
    line_thickness=8
)

# 結果の表示
plt.figure(figsize=(10, 10))
plt.imshow(image_rgb)
plt.show()
