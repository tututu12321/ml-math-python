# Importing necessary libraries / 必要なライブラリをインポート
from ultralytics import YOLO
import cv2
import matplotlib.pyplot as plt

# Load a pre-trained YOLOv8 model (or YOLOv5)
# 事前学習済みのYOLOv8モデル（またはYOLOv5）をロード
# YOLO('yolov8n.pt') - for YOLOv8 tiny model
# YOLO('yolov5n.pt') - for YOLOv5 tiny model
model = YOLO('yolov8n.pt')  # You can replace 'yolov8n.pt' with any YOLOv8 model version (e.g., yolov8m.pt, yolov8l.pt)
                            # 'yolov8n.pt' を他のYOLOv8モデルに置き換えることも可能 (例: yolov8m.pt, yolov8l.pt)

# Load an image where you want to detect objects
# オブジェクト検出を行いたい画像をロード
image_path = "your_image.jpg"  # Replace with the path to your image / 画像のパスに置き換えてください
image = cv2.imread(image_path)

# Perform object detection / オブジェクト検出を実行
results = model(image)  # Detect objects in the image / 画像内のオブジェクトを検出

# Print the results in the console (optional) / 結果をコンソールに出力（オプション）
print(results)

# Display detected objects on the image / 検出されたオブジェクトを画像に表示
result_image = results[0].plot()  # Plots the boxes, labels, and scores / ボックス、ラベル、スコアをプロット

# Use OpenCV to display the image / OpenCVを使って画像を表示
cv2.imshow('YOLO Object Detection', result_image)
cv2.waitKey(0)  # Wait for a key press to close the window / ウィンドウを閉じるためにキー入力を待機
cv2.destroyAllWindows()

# Optionally, save the image with the detected objects / 検出されたオブジェクトの画像を保存（オプション）
cv2.imwrite('detected_objects.jpg', result_image)
print("Image saved as 'detected_objects.jpg'")  # 画像が 'detected_objects.jpg' として保存されました
