import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

# ダミーセンサーデータの生成
np.random.seed(42)
normal_data = np.random.normal(loc=50, scale=5, size=(100, 2))  # 正常データ
anomalous_data = np.random.normal(loc=70, scale=5, size=(10, 2))  # 異常データ
data = np.vstack([normal_data, anomalous_data])
labels = np.array([0]*100 + [1]*10)  # 0:正常, 1:異常

# データフレームに変換
df = pd.DataFrame(data, columns=["Sensor1", "Sensor2"])
df["Label"] = labels

# K-Meansクラスタリング
kmeans = KMeans(n_clusters=2, random_state=42)
df['Cluster'] = kmeans.fit_predict(df[["Sensor1", "Sensor2"]])

# クラスタ中心からの距離を計算
df['Distance'] = np.linalg.norm(df[["Sensor1", "Sensor2"]] - kmeans.cluster_centers_[df['Cluster']], axis=1)

# 異常スコアを計算（閾値を設定）
threshold = df['Distance'].quantile(0.95)  # 上位5%を異常と見なす
df['Anomaly'] = (df['Distance'] > threshold).astype(int)

# 結果の確認
print("Number of anomalies detected:", df['Anomaly'].sum())
print(df[df['Anomaly'] == 1])

# データのプロット
plt.figure(figsize=(10, 6))
plt.scatter(df['Sensor1'], df['Sensor2'], c=df['Anomaly'], cmap='coolwarm', label='Anomaly Detection')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=200, c='yellow', label='Cluster Centers')
plt.title("Sensor Data with Anomaly Detection")
plt.xlabel("Sensor1")
plt.ylabel("Sensor2")
plt.legend()
plt.grid()
plt.show()
