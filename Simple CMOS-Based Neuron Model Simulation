import numpy as np
import matplotlib.pyplot as plt

# パラメータ設定
V_th = 1.0  # 閾値電圧 (V)
V_reset = 0.0  # リセット電圧 (V)
tau = 10  # 時定数 (ms)
I_input = 1.2  # 入力電流 (μA)
T = 100  # シミュレーション時間 (ms)
dt = 0.1  # 時間刻み (ms)

# 初期化
time = np.arange(0, T, dt)
V_membrane = np.zeros_like(time)  # メンブレン電位の記録用配列
spikes = []  # スパイクタイミングの記録

# シミュレーション
for t in range(1, len(time)):
    # 微小時間後のメンブレン電位
    dV = (I_input - V_membrane[t - 1]) / tau * dt
    V_membrane[t] = V_membrane[t - 1] + dV
    
    # 発火条件
    if V_membrane[t] >= V_th:
        spikes.append(time[t])  # スパイク発生時刻を記録
        V_membrane[t] = V_reset  # メンブレン電位をリセット

# プロット
plt.figure(figsize=(10, 6))
plt.plot(time, V_membrane, label="Membrane Potential (V)")
plt.plot(spikes, [V_th] * len(spikes), 'ro', label="Spikes")
plt.axhline(y=V_th, color='r', linestyle='--', label="Threshold Voltage")
plt.xlabel("Time (ms)")
plt.ylabel("Membrane Potential (V)")
plt.title("Simple CMOS-Based Neuron Model Simulation")
plt.legend()
plt.grid(True)
plt.show()
