# 必要なライブラリをインポート
import numpy as np
import matplotlib.pyplot as plt

# 新しいパラメータ設定（nビットを変数化）
f_input = 27.34375e3  # 入力周波数 [Hz]
fs = 250e3  # サンプリング周波数 [Hz]
N = 1024  # サンプリング点数
n_bits = 6  # 変換bit数（可変）

# 時間軸の作成
t = np.arange(N) / fs

# サイン波の生成 (27.34375 kHz)
signal = np.sin(2 * np.pi * f_input * t)

# クロック信号の生成（50%デューティ比）
clock_signal = np.where(np.arange(N) % 2 == 0, 1, 0)

# N / fs の周期を持つサイン波の生成
f_nfs = 1 / (N / fs)  # 周波数 [Hz]
signal_nfs = np.sin(2 * np.pi * f_nfs * t)

# nビットADCの量子化（0 ~ 2^n-1 の整数値）
levels = 2**n_bits  # nビット = 2^n レベル
signal_adc = np.round((signal + 1) * (levels / 2 - 1)).astype(int)  # [-1,1] を [0, levels-1] にスケール

# プロット
fig, axs = plt.subplots(3, 1, figsize=(12, 9))

# サイン波 (27.34375 kHz) のプロット
axs[0].plot(t, signal, label=f"Sine Wave {f_input/1e3:.3f} kHz", color='blue')
axs[0].set_xlabel("Time [s]")
axs[0].set_ylabel("Amplitude")
axs[0].set_title(f"Sine Wave Signal ({f_input/1e3:.3f} kHz)")
axs[0].grid()
axs[0].legend()

# クロック信号のプロット
axs[1].step(t, clock_signal, where='post', label=f"Clock Signal ({fs/1e3:.0f} kHz)", color='red')
axs[1].set_xlabel("Time [s]")
axs[1].set_ylabel("Clock Level")
axs[1].set_title(f"Clock Signal ({fs/1e3:.0f} kHz)")
axs[1].grid()
axs[1].legend()

# N / fs の周期のサイン波のプロット
axs[2].plot(t, signal_nfs, label=f"Sine Wave {f_nfs:.3f} Hz (N / fs Period)", color='green')
axs[2].set_xlabel("Time [s]")
axs[2].set_ylabel("Amplitude")
axs[2].set_title(f"Sine Wave Signal ({f_nfs:.3f} Hz, N / fs Period)")
axs[2].grid()
axs[2].legend()

plt.tight_layout()
plt.show()

# N / fs の値をプリント（すべての周期を表示）
nfs_period = N / fs  # N/fs の周期 (秒)
f_nfs_percentage = (f_nfs / fs) * 100  # サンプリング周波数に対する割合

# 周期の計算
T_input = 1 / f_input  # 入力信号の周期
T_sampling = 1 / fs  # サンプリング周期
T_nfs = 1 / f_nfs  # N/fs 信号の周期

# N / fs とクロックの割合
nfs_clock_ratio = nfs_period / T_sampling

# すべての情報を表示
print("===== Period and Frequency Information =====")
print(f"N = {N}")
print(f"Sampling Frequency = {fs:.0f} Hz")
print(f"Input Frequency = {f_input:.3f} Hz")
print(f"N / fs = {nfs_period:.6f} seconds")
print(f"Frequency of N / fs Sine Wave: {f_nfs:.3f} Hz ({f_nfs_percentage:.3f}%) of sampling frequency")
print(f"{n_bits}-bit ADC Levels: {levels} (0 to {levels - 1})")

print("\n===== Period Information =====")
print(f"Input Signal Period: {T_input:.6f} sec")
print(f"Sampling Period: {T_sampling:.6f} sec")
print(f"N / fs Signal Period: {T_nfs:.6f} sec")

print("\n===== N / fs and Clock Ratio =====")
print(f"N / fs Period / Sampling Period: {nfs_clock_ratio:.3f} times")
