# Import necessary libraries
# 必要なライブラリをインポート
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import accuracy_score

# Create a sample dataset for testing
# テスト用にサンプルデータセットを作成
np.random.seed(42)
sample_data = pd.DataFrame({
    'feature1': np.random.rand(100),  # 100 random values for feature1
    'feature2': np.random.rand(100),  # 100 random values for feature2
    'target': np.random.randint(0, 2, 100)  # Random binary target variable
})

# Save the sample dataset to a CSV file
# サンプルデータセットをCSVファイルとして保存
sample_data.to_csv('data.csv', index=False)

# Load dataset
# データセットを読み込む
data = pd.read_csv('data.csv')  # Use the created sample dataset

# Prepare features and target variable
# 特徴量とターゲット変数を準備
X = data.drop('target', axis=1)  # Features
y = data['target']  # Target variable

# Split the dataset into training and testing sets
# データセットを訓練用とテスト用に分割
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the GBDT model
# GBDTモデルを作成し、訓練
gbdt_model = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)
gbdt_model.fit(X_train, y_train)

# Make predictions
# 予測を行う
y_pred = gbdt_model.predict(X_test)

# Evaluate the model
# モデルを評価
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')  # Print accuracy
# 精度を表示
